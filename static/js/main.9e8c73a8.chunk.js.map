{"version":3,"sources":["components/Piece/Piece.js","components/Board/Board.js","components/App/App.js","reportWebVitals.js","index.js"],"names":["Piece","classes","this","props","player","className","React","Component","Board","item","i","j","view","onClick","renderFigure","row","map","renderItem","data","renderRow","App","state","whiteNext","rotated","di","dj","Array","fill","isWhitePlayer","isBlackPlayer","resetView","k","l","isMoveDiagonal","setState","prevI","prevJ","move","slice","handleClick","rotate","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9e8c73a8.chunk.js","sourcesContent":["import React from 'react';\r\nimport './Piece.css';\r\n\r\nclass Piece extends React.Component {\r\n    render() {\r\n        const classes = 'figure ' + (this.props.player === 2 ? 'figure-white' : 'figure-black');\r\n        return (\r\n            <span className={classes} />\r\n        );\r\n    }\r\n}\r\n\r\nexport default Piece;","import React from 'react';\r\nimport './Board.css';\r\nimport Piece from '../Piece/Piece';\r\n\r\nclass Board extends React.Component {\r\n\r\n    renderFigure(item) {\r\n        if (item !== 0) {\r\n            return <Piece player={item} />\r\n        }\r\n    }\r\n\r\n    renderItem(item, i, j) {\r\n        let classes = 'board-item' + ((j + i) % 2 === 0 ? ' board-item-white' : ' board-item-black');\r\n        if (this.props.view[i][j] === 1) {\r\n            classes += ' board-focused';\r\n        } else if (this.props.view[i][j] === 2) {\r\n            classes += ' board-blocked';\r\n        }\r\n        return (\r\n            <div\r\n                className={classes}\r\n                key={j}\r\n                onClick={() => this.props.onClick(i, j)}\r\n            >\r\n                {this.renderFigure(item)}\r\n            </div>\r\n        );\r\n    }\r\n\r\n    renderRow(row, i) {\r\n        return (\r\n            <div className=\"board-row\" key={i}>\r\n                {row.map((item, j) => this.renderItem(item, i, j))}\r\n            </div>\r\n        );\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className={'board ' + this.props.classes}>\r\n                {this.props.data.map((row, i) => this.renderRow(row, i))}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Board;","import './App.css';\nimport Board from '../Board/Board';\nimport React from 'react';\n\n/*\nwhite player - 2\nblack player - 1\nempty - 0\n */\nclass App extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            data: [\n                [0, 1, 0, 1, 0, 1, 0, 1],\n                [1, 0, 1, 0, 1, 0, 1, 0],\n                [0, 1, 0, 1, 0, 1, 0, 1],\n                [0, 0, 0, 0, 0, 0, 0, 0],\n                [0, 0, 0, 0, 0, 0, 0, 0],\n                [2, 0, 2, 0, 2, 0, 2, 0],\n                [0, 2, 0, 2, 0, 2, 0, 2],\n                [2, 0, 2, 0, 2, 0, 2, 0],\n            ],\n            view: [\n                [0, 0, 0, 0, 0, 0, 0, 0],\n                [0, 0, 0, 0, 0, 0, 0, 0],\n                [0, 0, 0, 0, 0, 0, 0, 0],\n                [0, 0, 0, 0, 0, 0, 0, 0],\n                [0, 0, 0, 0, 0, 0, 0, 0],\n                [0, 0, 0, 0, 0, 0, 0, 0],\n                [0, 0, 0, 0, 0, 0, 0, 0],\n                [0, 0, 0, 0, 0, 0, 0, 0],\n            ],\n            whiteNext: true,\n            rotated: false,\n        };\n    }\n\n    isBlackPlayer(i, j) {\n        return this.state.data[i][j] === 1 && !this.state.whiteNext;\n    }\n\n    isWhitePlayer(i, j) {\n        return this.state.data[i][j] === 2 && this.state.whiteNext;\n    }\n\n    isMoveDiagonal(i, j, di, dj) {\n        return (j + di === dj + i) || (j + i === dj + di);\n    }\n\n    resetView() {\n        return Array(8).fill(null).map(() => Array(8).fill(0));\n    }\n\n    handleClick(i, j) {\n        if (this.isWhitePlayer(i, j) || this.isBlackPlayer(i, j)) {\n\n            // calculate view\n            const view = this.resetView();\n            view[i][j] = 1;\n            for (let k = 0; k < 8; k++) {\n                for (let l = 0; l < 8; l++) {\n                    if (this.isMoveDiagonal(i, j, k, l) && this.state.data[k][l] === 0) {\n                        view[k][l] = 2;\n                    }\n                }\n            }\n\n            // update view\n            this.setState({\n               view: view,\n            });\n\n            // saving as previous\n            this.prevI= i;\n            this.prevJ = j;\n\n        } else if (this.state.view[i][j] === 2) {\n\n            // is move legal -> move\n            this.move(i, j, this.prevI, this.prevJ);\n            this.setState({\n               view: this.resetView(),\n            });\n        }\n    }\n\n    move(i, j, di, dj) {\n        const data = this.state.data.slice();\n        data[i][j] = data[di][dj];\n        data[di][dj] = 0;\n        this.setState({\n            data: data,\n            whiteNext: !this.state.whiteNext,\n        });\n    }\n\n    rotate() {\n        this.setState({rotated: !this.state.rotated});\n    }\n\n    render() {\n        return (\n            <div className=\"app\">\n                <header className=\"app-header\">\n                    <h1>Draughts game!</h1>\n                </header>\n                <main>\n                    <Board\n                        onClick={(i, j) => this.handleClick(i, j)}\n                        data={this.state.data}\n                        view={this.state.view}\n                        classes={this.state.rotated ? 'board rotated' : ''}\n                    />\n                    <p>{this.state.whiteNext ? 'White round' : 'Black round'}</p>\n                    <button onClick={() => this.rotate()} >\n                        Rotate board\n                    </button>\n                </main>\n            </div>\n        );\n    }\n\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}